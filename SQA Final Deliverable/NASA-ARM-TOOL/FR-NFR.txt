3.1 Functional Requirements
3.1.1 User Profile Management
3.1.1.1 The User Profile Management system shall allow a new Patient to register by providing full name, date of birth, email, and password.
3.1.1.2 The User Profile Management system shall allow a new Doctor to register by providing full name, medical license number, email, and password.
3.1.1.3 The User Profile Management system shall enforce role‑based access control (RBAC), differentiating patients and doctors.
3.1.1.4 The User Profile Management system shall prevent duplicate registrations by checking email uniqueness.
3.1.1.5 The User Profile Management system shall allow users to update their profile except for unique identifiers.
3.1.1.6 The User Profile Management system shall secure credentials using salted password hashing and optional multi‑factor authentication (MFA).
3.1.2 Patient Request Management
3.1.2.1 Only registered Patients shall submit consultation requests.
3.1.2.2 Each consultation request shall receive a unique Request ID and timestamp upon submission.
3.1.2.3 Patients shall view only their own requests; attempts to access others’ requests shall be denied.
3.1.2.4 The system shall enforce input validation and sanitization for request data to prevent injection attacks.
3.1.2.5 The system shall notify the assigned Doctor within 1 minute of request submission.
3.1.3 Doctor Request Handling
3.1.3.1 Doctors shall see only unassigned Patient requests in their dashboard.
3.1.3.2 Upon opening a request, the system shall assign it exclusively to that Doctor.
3.1.3.3 Doctors shall update request status to In Progress or Closed, following the sequence Open → In Progress → Closed.
3.1.3.4 The system shall log every status change with timestamp, Doctor ID, and notes.
3.1.4 Request Status Management
3.1.4.1 The system shall escalate requests remaining in Open state for over 24 hours by sending a reminder to a supervisor.
3.1.4.2 Closed requests shall be archived and locked against further edits.
3.1.4.3 The system shall provide filtering of requests by status (Open, In Progress, Closed) in the Doctor dashboard.
3.2 Non‑Functional Requirements
3.2.1 Performance
3.2.1.1 The web interface shall respond to user actions within 2 seconds under normal load (< 100 concurrent users).
3.2.1.2 Notification delivery shall complete within 1 minute of trigger.
3.2.2 Security & Compliance
3.2.2.1 All data at rest and in transit shall be encrypted using AES‑256 and TLS.
3.2.2.2 The system shall comply with HIPAA and ISO/IEC 27001 standards.3.2.2.3 User sessions shall expire after 15 minutes of inactivity.
3.2.2.4 Access to API endpoints shall be restricted by user role.
3.2.3 Reliability & Availability
3.2.3.1 The system shall achieve 99.5% uptime monthly, excluding scheduled maintenance.
3.2.3.2 Automatic backups of the database shall occur every 6 hours.
3.2.4 Maintainability & Scalability
3.2.4.1 The architecture shall support horizontal scaling to add capacity for a 50% increase in users within 3 months.
3.2.4.2 All code modules shall include unit tests covering ≥ 80% of statements.
3.3 Other Requirements
3.3.1 The system shall integrate with external EHR systems via HL7 messaging.
3.3.2 Audit logs shall be retained for a minimum of 7 years.

